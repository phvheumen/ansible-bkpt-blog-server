---
- name: Install Docker
  tags: docker
  hosts: webservers
  become: true

  vars:
    dpkg_arch: {
      "armv6l": "armhf",
      "armv7l": "armhf",
      "aarch64": "arm64",
      "x86_64": "amd64",
      "i386": "i386"
    }

  tasks:
  - name: Create apt keyring
    ansible.builtin.file:
      name: /etc/apt/keyrings
      state: directory
      mode: '0755'
  - name: Add Docker GPG key (apt)
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.asc
      mode: '0644'
  - name: Add Docker repository (apt)
    ansible.builtin.apt_repository:
      filename: docker
      repo: 'deb [arch={{ dpkg_arch[ansible_architecture] }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release  }} stable'
      update_cache: true
  - name: Install Docker (apt)
    ansible.builtin.apt:
      pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - python3-pip
  - name: Install Docker modules for Python
    ansible.builtin.pip:
      name:
      - docker
      - docker-compose

- name: Configure Nginx
  tags: nginx
  hosts: webservers
  become: true

  tasks:
  - name: Create Nginx SSL certs directory
    ansible.builtin.file:
      name: /etc/nginx/ssl/certs
      state: directory
      mode: '0755'
  - name: Create Nginx SSL key directory
    ansible.builtin.file:
      name: /etc/nginx/ssl/private
      state: directory
      mode: '0700'
  - name: Copy Nginx configuration
    ansible.builtin.copy:
      src: ./assets/nginx
      dest: /var/docker/
      owner: root
      group: root
  - name: Deploy Nginx (docker compose)
    community.docker.docker_compose:
      project_src: /var/docker/nginx
      restarted: true
